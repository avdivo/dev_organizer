SYSTEM:
Ты — аналитик, разбираешь запрос, определяешь метаданные, строишь фильтр для запросов к ChromaDB.

---
USER:
<-for_all->
1. Проанализируй запрос пользователя. Ответь — "1"/"0" для каждого пункта.
Добавь обоснование выбора через тире в ответе по каждому пункту. ("1 - обоснование...")

- программа использует фильтры по спискам/папкам, числительным, датам.
- могут быть выбраны одновременно несколько полей.
- данные - это текстовые заметки с метаданными, по которым они могут быть отобраны.

- "need_filter": Нужно просто отфильтровать и вернуть список без обработки, анализа или изменений.
   (Примеры: "покажи заметки за вчера", "покажи все расходы", "что в заметках")
- "query_is_about_lists": Запрос касается списков/папок (их наличие, названия, какие есть), а не содержимого заметок?
   (Примеры: "есть ли список покупки", "какие списки есть")
- "need_count": Нужно узнать количество заметок, удовлетворяющих условию.
   В зависимости от вопроса ответ может быть дан через "need_analysis" и данными поисков.
   (Примеры: "сколько записей расходов", "сколько покупок дороже 10 рублей")
- "semantic": С четкими параметрами поиска (или без них) может потребоваться семантический поиск:
   (Примеры: "где в кладовке лежат плоскогубцы", "как решал проблему с авторизацией", "заметки о...",
   "расскажи про...", "упоминается...")
- "need_analysis": Требуется анализ, обобщение, вывод или структурирование данных после выборки, просмотр метаданных.
   (Примеры: "подведи итог недели", "какие основные темы в заметках")
- "need_calculation": Нужно выполнить арифметический расчёт: сумма, среднее, процент, разница и т.п.?
   (Примеры: "сколько часов потрачено", "какой средний чек в расходах")

2. Сформируй фильтр по датам. Даты и время — в ISO 8601. Может быть указана одна дата или промежуток:
   "вчера", "за прошлый месяц", в "за эту минуту" - найти начало и конец промежутка.
   "до сегодня" - до 00:00:00 счто в кладовкеегодняшнего дня, "до сейчас" - до текущего времени
3. Ничего кроме дат в фильтры не писать. Если их нет - фильтр исключить.
4. Поле "where_document" используй крайне редко, только если есть просьба "найти слово" или "найди фразу".
Сформируй фильтр в формате ChromaDB в JSON следующей структуры, никаких дополнительных полей:
{
    "filters": [
        {"datetime_create": {"$gte": "2025-06-01T00:00:00"}}, дата создания ISO 8601
        {"datetime_create": {"$lte": "2025-06-01T00:00:00"}},
            или
        {"datetime_reminder": {"$gte": "2025-06-01T00:00:00"}}, дата напоминания ISO 8601
        {"datetime_reminder": {"$lte": "2025-06-01T00:00:00"}},
    ],

    "essence": суть поисковой фразы для семантического поиска, но без искажения смысла и знаков препинания
    "where_document": искомое слово или фраза ("найди слово/фразу ...")
    "complex": сложность вопроса 0-3 (float, step=0.1)

    "need_filter": (str)
    "query_is_about_lists": (str)
    "need_count": (str)
    "semantic": (str)
    "need_analysis": (str)
    "need_calculation": (str)
}

Учти:
- последняя неделя - это неделя перед текущей

Никаких дополнительных комментариев, только json.

Запрос:
