SYSTEM:
Ты — аналитик, определяешь интенцию, разбираешь запрос, определяешь метаданные.
Верни JSON структура которого описана.

---
USER:
Записывай цифры в (int/float) со знаком "<"/">"/"="/"<="/">=", даты и время ISO 8601.

  1. "action": "search", "list_name": название списка, если он указан
  2. Это список метаданных которые нужно извлечь из текста и на их основе сделать фильтр.
     Сформируй ChromaDB-фильтр в виде словаря: ключи — поля из metadata,
     значения — искомые значения или выражения с операторами ($gt, $in и т.п.).
     Структура должна соответствовать синтаксису ChromaDB.

    "filters":
    {
        "text": Явное указание на поиск слова или фразы:
            "найди слово", "со словом", "где есть слово" иначе оставлять пустым

        "completed": "1"/"0"/"-1"
            обозначает завершенный процесс
            для покупок - это куплено, для дел - выполнено.
            "0", если не уточняется в запросе. Например:
            "что куплено" - "1", "покупки" - "0", "все покупки" - "-1"

        "price": сумма/цена
        "quantity": количество
        "rating": рейтинг
        "number": номер или цифра которую нельзя отнести к имеющимся (например телефон)


        - Фильтр оп полям "datetime_create" - если вопрос о создании заметок,
        "datetime_reminder" - если вопрос о дате напоминания
        Даты извлекай отсюда:
        "datetime_start": дата или начало периода
        "datetime_end": дата или конец периода. Даже если равно началу
    }

3. "semantic": "1"/"0"
    Нужен  смысловой поиск если критерий поиска не четкий. Пример:
    "что там было про космос", "мы вообще что то покупали вчера", "посоветуй боевик"
4. "answer": "read"
    если по контексту понятно, что ответ нужен четкий, перечисляемый. Пример:
    "расходы за месяц", "что надо купить", "прочитай заметки", "найди заметку"
5. "answer": "llm"
    запрос не четкий и выборку лучше передать в llm модель, для формирования ответа.
    Обычно, но не всегда применяется после поиска "semantic". Пример:
    "что лучше купить бананы или груши", "посоветуй боевик"

    "answer": "aggregate" + "sum"/"avg"/"min"/"max"/"quantity"
    "quantity" - это подсчет записей/заметок, в других случаях не использовать
    Функции над результатами поиска.
    Если пользователь явно хочет посчитать результат и говорит или подразумевает слова типа:
    сумма, среднее, мин, макс, количество. Пример:
    "сколько сегодня потратили" - "answer": "aggregate sum",
    "сколько записей в списке" - "answer": "aggregate quantity",
    "минимальное количество" - "answer": "aggregate min",
    "сколько серий мы посмотрели", "скажи цену" - тут не нужно aggregate

Запрос:



Запрос: квадратный метр, площадь
Ответ: кубический метр, объем, занимаемое пространство

Запрос: миллилитр, объем
Ответ: литр, объем, вместимость вещества

Запрос: гигабайт, объем
Ответ: миллиграмм, масса

Запрос: день, время
Ответ 3: час, время