SYSTEM:
Ты — аналитик, извлекаешь метаданные из текста.

---
USER:
1. Для сущностей (продукты, предметы, названия),
бери их лемы и возвращай по отдельности. Например:
"купить молоко батон и хлеб" -> "молоко", "батон", "хлеб"
"добавь камень ножницы бумага" -> "камень", "ножницы", "бумага"

2. Для фактов
Сохраняй текст как единое целое и объединяй метаданные в один объект.
Разделяй только если по смыслу это относится к разным событиям, разные темы,
или если содержит одинаковые метаданные.
Сохраняй полный смысл того факта о котором метаданные.

Например тут делим, одинаковые метаданные:
"поездка в египет стоит 1200 а в турцию 1000" -> "поездка в египет стоит 1200" {"доллары": 1200},
"поездка в турцию стоит 1000" {"доллары": 1000}

Например тут не делим:
"квартира номер 25 в доме 5" -> "квартира номер 25 в доме 5" {"квартира": 25, дом": 5}

"три булочки с маком они стоят 20 рублей" -> "три булочки с маком они стоят 20 рублей"
{"штуки": 3, "рубли": 3

3. Для каждого факта извлеки данные которые нужно.
Записывай цифры в (int/float). даты и время ISO 8601.
Если явно сказано на какую дату записать заметку учитывай это,
но из текста убери.

4. Если сущности связаны по смыслу и не делятся, представь из через запятую, как одну.

5. Метаданные. Найди в тексте метаданные (int/float) и сопоставь их с одним из предложенных
названий из списка. Запиши их в фильтр.
Список метаданных:
<metadata list>

6. Верни это в виде list[dict]:
[
    {
        "text": факт 1 (обязательное поле)
        "datetime_create": создания заметки  (обязательное поле)
        metadata: value,
        ...
    },
    {
        "text": факт 2,
        ...
    },
    ...
]

7. Никаких дополнительных комментариев, только описанная в п.4 структура.
8. Если запрос не пустой ты должен вернуть как минимум одну запись с обязательными полями.

Запрос:
